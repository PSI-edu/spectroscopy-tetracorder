#!/bin/sh

# makes the specpr commands for building the convolved splib06* libraries
#
# Roger N. Clark  3/29/2004 - 11/2021

#echo "WARNING: this script assumes splib06b is current"
#echo "         It should be newer than splib06a:"
#ll ../splib06a splib06b

# Form:
#
# mak.convolve.1.cmds  library version channels name     resol_number  [noX]
#
# add noX to run with no X-window plots (will do ascii plots in the terminal window)
#
# Example: AVIRIS95:
#
# mak.convolve.1.cmds  library version channels name     resol_number
# mak.convolve.1.cmds  s06av95  a        224   AVIRIS95  12

# NOTE: restart file is expected to be: r1.SPECPR_FILE_NAME
# Note: SPECPR_FILE_NAME.start must exist (build by and)


#        11111111112222222222333333333344444444445555555555666666666677777777778
#2345678901234567890123456789012345678901234567890123456789012345678901234567890
#   53  Acmite NMNH133746 Pyroxene   W1R1Ba AREF   480  15:18:47.00  03/23/1988
#   66  Actinolite HS116.3B          W1R1Bb AREF   480  08:41:01.00  07/11/1991

# convolved entry might look like:
#   36  Actinolite HS116.3B          AVIRIS95 =b   224  08:41:01.00  07/11/1991

# spectral range, reflectance codes:
# WnRmBs in splib06* n=1,2, m= , s=spectral Purity.
# AREF RREF or RTGC



list=splib06b.list-h.1
tmp=tmpyy$$

if [ ! -f "$list" ]
then

        # skip the first 18 entries as they are headers, waves, resol.
	spprint splib06b | tail +18 | grep -v '^ done$' > $list
fi

if [ -z "$5" ]
then
	echo "ERROR: Insuffcient command line parameters."
	echo "Form:"
	echo "         mak.convolve.1.cmds  library channels name     version"
	echo "Example:"
	echo "         mak.convolve.1.cmds  s06av95   224   AVIRIS95  a"
	echo "         maks s06av95a"
	echo "exit 1"
	exit 1
fi

doXplot=1  # default is do X-window plot

if [ "$6" = "noX" ]
then
	doXplot=0    # no X-windows
fi

liba=$1
lib=${1}${2}
version=$2
chans=$3
name=$4
resol=$5

restart=restartfiles/r.${liba}${version}
libstrt=${lib}.start

cmdfil=conv.${liba}${version}.cmds

if [ ! -f "$restart" ]
then
	echo "ERROR: specpr restart file:  $restart  does not exist"
	echo "exit 1"
	exit 1
fi

if [ ! -f "startfiles/$libstrt" ]
then
	echo "ERROR: specpr start file:  $libstrt  does not exist"
	echo "exit 1"
	exit 1
fi


#    channels   # padding specpr records needed (rpad)
#    1 -  256    5
#  257 -  639    4
#  640 - 1022    3
# 1023 - 1405    2
# 1406 - 1788    1
# 1789 - 2171    0

# 2172 - 2554       This will be future large channel libraries
# 2555 - 2937
# 2938 - 3320
# 3321 - 3703
# 3704 - 4086
# 4087 - 4469
# 4470 - 4852

rpad=5
if [ $chans -gt "256" ]
then
	rpad=4
fi
if [ $chans -gt "639" ]
then
	rpad=3
fi
if [ $chans -gt "1022" ]
then
	rpad=2
fi
if [ $chans -gt "1405" ]
then
	rpad=1
fi
if [ $chans -gt "1788" ]
then
	rpad=0
fi
if [ $chans -gt "2171" ]
then
	echo "ERROR: script is not yet programmed for channels > 2171"
	exit 1
fi


##### create command file start (the following block applies to
##### spectra with channels from 1 to 2171

echo "c"                     > $cmdfil   # startup
echo "c"                    >> $cmdfil   # startup
echo "c"                    >> $cmdfil   # startup
echo "c"                    >> $cmdfil   # startup
echo "c"                    >> $cmdfil   # startup
echo " "                    >> $cmdfil   # startup
echo " "                    >> $cmdfil   # startup
echo "==[FILEID]y"          >> $cmdfil   # y=splib06b input spectra
echo "==[Fout]v"            >> $cmdfil   # v=s06_____ output spectra
echo "==[outwave]V6"        >> $cmdfil   # output wavelengths
echo "==[outres]v$resol  s" >> $cmdfil   # output resolution
echo "==[sppad]v5"          >> $cmdfil   # record number of pad
echo "m"                    >> $cmdfil   # go to math

##### this was from the old script
#
#spprint splib04b | grep ABSREF950 | \
#sed -e 's/ABSREF950.*$/AVIRIS95.1/'    \
#    -e 's/^......  /&:/'          | \
#
#    awk -F: '{ print "==[Recnum]" $1 } \
#             { print "==[Title]" $2 } \
#             { print "<convolve.cmds.work" }' \
#		>> $cmdfil
#
#echo 'e;EX' >> $cmdfil

# now parse master LIST file, one line at a time

tlines=`wc -l $list | awk '{ print $1 }'`   # total lines in file

aline=0  # line counter

while [ "$aline" -lt "$tlines" ]     # start loop
do
        aline=`expr $aline + 1`

        oneline=`head -$aline $list | tail -1`

        head -$aline $list | tail -1 > $tmp

        x=`echo $oneline | grep -v '^#'`
        if [ ! -z "$x" ]
        then
		# parse fields

		srec=`echo $oneline | awk '{ print $1 }'`                     # specpr record number
		stitl=`cut -c 9-48 $tmp`                                      # specpr title
		stitl2=`cut -c 9-48 $tmp | sed -e 's/ /\\ /g'`                # specpr title

		stitlc=`cut -c 9-37 $tmp`
		Ttitle=${stitlc}'   DESCRIPT'
		Tfeat=${stitlc}'    FEATANL'

		achans=`cut -c 50-54 $tmp`       # number of channels

		sptype=`cut -c 38-42 $tmp`      # spectrometer range and wavelength set indicator

		atest=`echo $stitl | grep 'W[1-9]R[1-9][A-Z]'`
		if [ -n "$atest" ]    # process spectral titles
		then
			btitle=`echo "$stitl" | sed -e 's/W[1-9]R[1-9][A-Z].*$//'`

			b2title=`echo "$btitle" | sed -e 's,/,\\\/,g'`

			#echo "DEBUG: $btitle"  | grep '\/'
			#echo "DEBUG: $b2title" | grep '\/'

			ctitle=`echo "$stitl" | sed -e s/"$b2title"//` # title portion with spectra range, etc.

			spur=`echo $ctitle | awk '{ print $1 }' | sed -e 's/W[1-9]R[1-9][A-Z]'//`

			ntitle="$btitle $lib"="$spur"

		else
			ntitle=$stitl
		fi

		#echo 'DEBUG 1'

		########### splib06b  (assigned to y)
                #     6  Wavelengths USGS Denver Beckman csp3961   3961
                #    17  Bandpass (FWHM) USGS Beckman csp3961      3961
                #    28  Wavelengths Standard ASD FR 0.35-2.5um    2151
                #    34  Bandpass (FWHM) ASD FR 0.35-2.5um         2151
                #    40  Wavelengths to Nicolet 1.3 - 5.2 microns  3325
                #    50  Bandpass (FWHM) Nicolet FTIR 1.3-5.3 um   3325
                #    60  Wavelengths to Nicolet 1.3-150 microns    4280
                #    72  Bandpass (FWHM) Nicolet 1.3-150 microns   4280
                #    84  Wavelengths AVIRIS 0.4-2.5 um csp2138     2138
                #    90  Bandpass (FWHM) AVIRIS 0.4-2.5um csp2138  2138


		#if   [ "$sptype" = 'W1R1B' ]     # beckman
		if   [ "$achans" = ' 3961' ]     # beckman splib06b
		then
			chans=3961

			echo '\######## convolve spectrum' >> $cmdfil
			echo "==[inwave]Y6"        >> $cmdfil   # input wavelengths
			echo "==[inres]y17"        >> $cmdfil   # input resolution

			echo "==[Recnum]" $srec    >> $cmdfil
			echo "==[Title]"$ntitle    >> $cmdfil

			if [ "$doXplot" = "1" ]   # X-window plot
			then
				echo "<work/convolve.cmds.work"     >> $cmdfil
			else
				echo "<work/convolve.cmds.work-noX" >> $cmdfil
			fi


		#elif [ "$sptype" = 'W1R1F' ]     # Field spectrometer
		elif [ "$achans" = ' 2151' ]     # Field spectrometer
		then
			chans=2151

			echo '\######## convolve spectrum' >> $cmdfil
			echo "==[inwave]Y28"       >> $cmdfil   # input wavelengths
			echo "==[inres]y34"        >> $cmdfil   # input resolution

			echo "==[Recnum]" $srec    >> $cmdfil
			echo "==[Title]"$ntitle    >> $cmdfil
			if [ "$doXplot" = "1" ]   # X-window plot
			then
				echo "<work/convolve.cmds.work"     >> $cmdfil
			else
				echo "<work/convolve.cmds.work-noX" >> $cmdfil
			fi


		#elif [ "$sptype" = 'W1R4N' ]     # Nicolet spectrometer, also W2R4N
		elif [ "$achans" = ' 3325' ]     # Nicolet spectrometer
		then
			chans=3325

			echo '\######## convolve spectrum' >> $cmdfil
			echo "==[inwave]Y40"       >> $cmdfil   # input wavelengths
			echo "==[inres]y50"        >> $cmdfil   # input resolution

			echo "==[Recnum]" $srec    >> $cmdfil
			echo "==[Title]"$ntitle    >> $cmdfil
			if [ "$doXplot" = "1" ]   # X-window plot
			then
				echo "<work/convolve.cmds.work"     >> $cmdfil
			else
				echo "<work/convolve.cmds.work-noX" >> $cmdfil
			fi


		#elif [ "$sptype" = 'W9R4N' ]     # Nicolet spectrometer, also W5R4N
		elif [ "$achans" = ' 4280' ]     # Nicolet spectrometer
		then
			chans=4280

			echo '\######## convolve spectrum' >> $cmdfil
			echo "==[inwave]Y60"       >> $cmdfil   # input wavelengths
			echo "==[inres]y72"        >> $cmdfil   # input resolution

			echo "==[Recnum]" $srec    >> $cmdfil
			echo "==[Title]"$ntitle    >> $cmdfil
			if [ "$doXplot" = "1" ]   # X-window plot
			then
				echo "<work/convolve.cmds.work"     >> $cmdfil
			else
				echo "<work/convolve.cmds.work-noX" >> $cmdfil
			fi


		#elif [ "$sptype" = 'W1R1A' ]     # AVIRIS spectrometer
		elif [ "$achans" = ' 2138' ]     # AVIRIS spectrometer
		then
			chans=2138

			echo '\######## convolve spectrum' >> $cmdfil
			echo "==[inwave]Y84"       >> $cmdfil   # input wavelengths
			echo "==[inres]y90"        >> $cmdfil   # input resolution

			echo "==[Recnum]" $srec    >> $cmdfil
			echo "==[Title]"$ntitle    >> $cmdfil
			if [ "$doXplot" = "1" ]   # X-window plot
			then
				echo "<work/convolve.cmds.work"     >> $cmdfil
			else
				echo "<work/convolve.cmds.work-noX" >> $cmdfil
			fi



		else
			ichans=0
			echo "ERROR: spectrometer type: $achans NOT FOUND"
			echo "ERROR: spectrometer type: $achans NOT FOUND" >> $spcmdf
			echo "Press return to continue"
			read zz

		fi

		#### add padding if necessary

		if [ "$rpad" -gt "0" ]        # add padding if rpad>0
		then
			echo "e;t  \\# go to display" >> $cmdfil
			ii=0
			while [ "$ii" -lt $rpad ]
			do
        			ii=`expr $ii + 1`
				echo "[sppad] t v  \\# add padding record $ii" >> $cmdfil
			done
			echo "e;m  \\# go to math" >> $cmdfil

		fi

    
		#echo "$srec $ntitle"
		#echo "$stitl2"

        else
                # found a comment or blank line

                echo "# $oneline"
        fi

done


echo 'e;EX' >> $cmdfil
rm $tmp
