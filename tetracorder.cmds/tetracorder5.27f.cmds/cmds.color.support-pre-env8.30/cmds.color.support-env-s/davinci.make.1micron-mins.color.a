#!/usr/bin/env -S davinci -f  
####!/usr/local/bin/davinci -f

###########################  was:  #!/usr/local/bin/davinci -f



# command line:
# prog    gray_base_image  prefix-file-name   [dual|nodual]

dual    = 1     # default color + gray image 
dualmax = 2000  # no dual if width is greater than this

if ($argc >= 3) {

	if ( "$3" == "nodual" ) {
		dual = 0
	}
	if ( "$3" == "dual" ) {
		dual = 1
		dualmax = 999999 
	}
}


define read_an_image(1,1) {

        # read a gray-scale image and convert to 3-bands

        afile = $1   # file to read
        printf ("reading file %s\n", afile)
        aaa=read(filename=afile)
        if (HasValue(aaa) ==0) {  # check that read worked
                printf ("read ERROR on file: %s\n",afile)
                printf ("setting to zero\n")
                aaa=0
        }
        qqq = cat(aaa,aaa,axis=z)  # make into 2-band image
        aaa = cat(aaa,qqq,axis=z)  # make into 3-band image

        return (aaa)

}  # end define


# Fe2+, generic  (blues)

a=read_an_image("group.1um/fe2+generic.all.fd.gif")

b=read_an_image("group.1um/fe2+_pyroxene.hypersthene.fd.gif")

c=read_an_image("group.1um/fe2+generic_carbonate_siderite1.fd.gif")


# Fe2+ Fe3+ mix (magenta)

f1="group.1um/fe2+fe3+_hematite_weathering.fd.gif"
a1=read_an_image(f1)

f1="group.1um/fe2+_goeth+musc.fd.gif"
a2=read_an_image(f1)

d=a1+a2


# Fe3+ mix (salmon)

e=read_an_image("group.1um/fe3+mix_AMD.assemb1+2.fd.gif")


# Fe3+ sulphate  (greens)

f=read_an_image("group.1um/fe3+fe2+_sulfate_copiapite.fd.gif")

g=read_an_image("group.1um/fe3+_sulfate_jarosite_br34a2.fd.gif")


# Fe3+  hydroxide, FeOOH  (yellows)

h=read_an_image("group.1um/fe3+_goethite.coarsegr.ALL.fd.gif")

i=read_an_image("group.1um/fe3+_goethite.medgr.fd.gif")

j=read_an_image("group.1um/fe3+_goethite.fingr.fd.gif")

k=read_an_image("group.1um/fe3+_goethite.thincoat.fd.gif")


# Fe3+ oxide  (red to orange)

l=read_an_image("group.1um/fe3+_hematite.lg.gr.all.fd.gif")

m=read_an_image("group.1um/fe3+_hematite.med.gr.all.fd.gif")

n=read_an_image("group.1um/fe3+_hematite.fine.gr.all.fd.gif")

o=read_an_image("group.1um/fe3+_hematite.nano.BR34b2.fd.gif")
o=o + read_an_image("group.1um/fe3+_hematite.nano.BR34b2b.fd.gif")


gfile = $1
gbase = read(filename=gfile)
        if (HasValue(gbase) ==0) {  # check that read worked
                printf ("read ERROR on file: %s\n",gfile)
                printf ("setting to zero\n")
                gbase=0
        }


# /info/COLORS.screen.to.printers
#
#      "color"         r    g    b
#    1 red            255   60    0   (255   50    0 better)
#    2 green           60  255    0
#    3 blue             0  105  255
#   
#    4 yellow         255  255    0
#    5 magenta        205   60  255
#    6 cyan             0  255  255
#  
#    7 army green     150  165    0   (160  175    0 better?)
#    8 salmon         255  170  170
#    9 flesh          255  200  155
#  
#   10 orange         255  110    0   (255  140    0 better?)
#   11 deep pink      235    0  180
#   12 yellow green   190  255    0
#
#   13 lavender       185  120  255
#   14 sky blue       140  210  255
#   15 pale sea green 110  255  190
#  
#   16 white          255  255  255
#   17 red-pink       255  125  125
#   18 gold           255  213    0
#
#   19 mud yellow     186  165    0
#   20 light pink     255  211  255
#

# a    Fe2+ generic all                 blue
# b    Fe2+ pyroxene                    sky blue
# c    Fe2+ siderite                    cyan
# d    Fe2+ + Fe3+                      magenta
# e    Fe3+ mix AMD                     salmon
# f    Fe3+ sulphate copiapite          pale sea green
# g    Fe3+ sulphate jarosite           green

# h    goethite coarse                  mud yellow
# i    goethite medium                  army green
# j    goethite fine                    gold
# k    goethite thin coat               yellow

# l    hematite coarse grained          red
# m    hematite medium grained          red pink
# n    hematite fine   grained          deep pink
# o    hematite nano                    orange



argb =  create(1,1,3, format=FLOAT, start=0.0, step=0.0)
brgb =  create(1,1,3, format=FLOAT, start=0.0, step=0.0)
crgb =  create(1,1,3, format=FLOAT, start=0.0, step=0.0)
drgb =  create(1,1,3, format=FLOAT, start=0.0, step=0.0)
ergb =  create(1,1,3, format=FLOAT, start=0.0, step=0.0)
frgb =  create(1,1,3, format=FLOAT, start=0.0, step=0.0)
grgb =  create(1,1,3, format=FLOAT, start=0.0, step=0.0)
hrgb =  create(1,1,3, format=FLOAT, start=0.0, step=0.0)
irgb =  create(1,1,3, format=FLOAT, start=0.0, step=0.0)
jrgb =  create(1,1,3, format=FLOAT, start=0.0, step=0.0)
krgb =  create(1,1,3, format=FLOAT, start=0.0, step=0.0)
lrgb =  create(1,1,3, format=FLOAT, start=0.0, step=0.0)
mrgb =  create(1,1,3, format=FLOAT, start=0.0, step=0.0)
nrgb =  create(1,1,3, format=FLOAT, start=0.0, step=0.0)
orgb =  create(1,1,3, format=FLOAT, start=0.0, step=0.0)

# Colors:
#              Red                  Green                Blue

argb[1,1,1] =    0. ; argb[1,1,2]=   105. ;  argb[1,1,3]= 255.   # blue
brgb[1,1,1] =  140. ; brgb[1,1,2]=   210. ;  brgb[1,1,3]= 255.   # sky blue
crgb[1,1,1] =    0. ; crgb[1,1,2]=   255. ;  crgb[1,1,3]= 255.   # cyan
drgb[1,1,1] =  255. ; drgb[1,1,2]=    60. ;  drgb[1,1,3]= 255.   # magenta
ergb[1,1,1] =  255. ; ergb[1,1,2]=   170. ;  ergb[1,1,3]= 170.   # salmon
frgb[1,1,1] =  110. ; frgb[1,1,2]=   255. ;  frgb[1,1,3]= 190.   # pale sea green
grgb[1,1,1] =   60. ; grgb[1,1,2]=   255. ;  grgb[1,1,3]=   0.   # green

hrgb[1,1,1] =  186. ; hrgb[1,1,2]=   165. ;  hrgb[1,1,3]=   0.   # mud yellow
irgb[1,1,1] =  160. ; irgb[1,1,2]=   175. ;  irgb[1,1,3]=   0.   # army green
jrgb[1,1,1] =  255. ; jrgb[1,1,2]=   213. ;  jrgb[1,1,3]=   0.   # gold
krgb[1,1,1] =  255. ; krgb[1,1,2]=   255. ;  krgb[1,1,3]=   0.   # yellow

lrgb[1,1,1] =  255. ; lrgb[1,1,2]=    60. ;  lrgb[1,1,3]=   0.   # red
mrgb[1,1,1] =  255. ; mrgb[1,1,2]=   125. ;  mrgb[1,1,3]= 125.   # red pink
nrgb[1,1,1] =  235. ; nrgb[1,1,2]=     0. ;  nrgb[1,1,3]= 180.   # red pink
orgb[1,1,1] =  255. ; orgb[1,1,2]=   110. ;  orgb[1,1,3]=   0.   # orange


xaz=float(a*0)

xaz= xaz + a*(argb/255.)
xaz= xaz + b*(brgb/255.)
xaz= xaz + c*(crgb/255.)
xaz= xaz + d*(drgb/255.)
xaz= xaz + e*(ergb/255.)
xaz= xaz + f*(frgb/255.)
xaz= xaz + g*(grgb/255.)
xaz= xaz + h*(hrgb/255.)
xaz= xaz + i*(irgb/255.)
xaz= xaz + j*(jrgb/255.)
xaz= xaz + k*(krgb/255.)
xaz= xaz + l*(lrgb/255.)
xaz= xaz + m*(mrgb/255.)
xaz= xaz + n*(nrgb/255.)
xaz= xaz + o*(orgb/255.)

xout=byte(xaz+0.5)
xout = bip(xout)

gbasedim=dim(gbase)
x=gbasedim[1,,]

if (x > dualmax) {
	dual = 0
}

if ( dual == 1 ) {
	
	gbase = bip(gbase)
	printf ("    creating color + dual image\n")
	gbmom = moment(gbase)
	printf ("    gbase: min, max, mean %f %f %f\n", gbmom[1,,], gbmom[2,,], gbmom[3,,])
	xout = cat (xout, gbase, axis=x)
}


fout=$2

adim=dim(xout)
if ( adim[1,,] > 5 || adim[2,,] > 5 ) {
	printf ("writing %s\n", fout)
	write (xout, filename=fout, type=png)
} else {
	printf ("not writing %s\n", fout)
	printf ("    image size < 6 pixels\n")
}
