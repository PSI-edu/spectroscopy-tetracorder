#!/usr/local/bin/davinci -f
####!/usr/bin/env -S davinci -f  

###########################  was:  #!/usr/local/bin/davinci -f



# command line:
# prog    gray_base_image  prefix-file-name   [dual|nodual]


dual    = 1     # default color + gray image 
dualmax = 2000  # no dual if width is greater than this

if ($argc >= 3) {

	if ( "$3" == "nodual" ) {
		dual = 0
	}
	if ( "$3" == "dual" ) {
		dual = 1
		dualmax = 999999 
	}
}



a1=read(filename="group.2um/smectite_beidellite_gds123.fd.gif")
        if (HasValue(a1) ==0) {  # check that read worked
              printf ("read ERROR on results file\n")
              printf ("setting to zero\n")
              a1=0
        }

a2=read(filename="group.2um/smectite_beidellite_gds124.fd.gif")
a3=read(filename="group.2um/smectite_montmorillonite_na_highswelling.fd.gif")
a=a1+a2+a3   # montmorillonite group 2.2um
	q=cat(a,a,axis=z)  # make into 3-band image
	a=cat(a,q,axis=z)  # make into 3-band image

a1=read(filename="group.2um/smectite_nontronite_swelling.fd.gif")
a2=read(filename="group.2um/smectite_montmorillonite_fe_swelling.fd.gif")
b=a1+a2      # montmorillonite group 2.3um
	q=cat(b,b,axis=z)  # make into 3-band image
	b=cat(b,q,axis=z)  # make into 3-band image

a1=read(filename="group.2um/micagrp_biotite.fd.gif")
a2=read(filename="group.2um/palygorskite.fd.gif")
a3=read(filename="group.2um/micagrp_muscovite-low-Al.fd.gif")
a4=read(filename="group.2um/micagrp_muscovite-med-Al.fd.gif")
a5=read(filename="group.2um/micagrp_muscovite-medhigh-Al.fd.gif")
a6=read(filename="group.2um/micagrp_illite.fd.gif")
a7=read(filename="group.2um/micagrp_paragonite.fd.gif")
c=a1+a2+a3+a4+a5+a6+a7    # phyllosilicates
	q=cat(c,c,axis=z)  # make into 3-band image
	c=cat(c,q,axis=z)  # make into 3-band image

a1=read(filename="group.2um/sioh_chalcedony.fd.gif")
a2=read(filename="group.2um/sioh_hydrated_basaltic_glass.fd.gif")
d=a1+a2      #  Si-OH hydrated silica
	q=cat(d,d,axis=z)  # make into 3-band image
	d=cat(d,q,axis=z)  # make into 3-band image

a1=read(filename="group.2um/kaolgrp_halloysite.fd.gif")
a2=read(filename="group.2um/kaolgrp_kaolinite_pxl.fd.gif")
a3=read(filename="group.2um/kaolgrp_kaolinite_wxl.fd.gif")
e=a1+a2+a3   # kaolinite group
	q=cat(e,e,axis=z)  # make into 3-band image
	e=cat(e,q,axis=z)  # make into 3-band image

a1=read(filename="group.2um/alunite.5+kaol.5.fd.gif")
a2=read(filename="group.2um/alunite+kaolinite.muscovite.added.fd.gif")
a3=read(filename="group.2um/Kalun+kaol.intmx.fd.gif")
a4=read(filename="group.2um/kaol.75+alun.25.fd.gif")
a5=read(filename="group.2um/Na-alun+kaol.intmx.fd.gif")
a6=read(filename="group.2um/alunite.33+kaol.33+musc.33.fd.gif")
f=a1+a2+a3+a4+a5+a6     # kaolin+alunite
	q=cat(f,f,axis=z)  # make into 3-band image
	f=cat(f,q,axis=z)  # make into 3-band image

a1=read(filename="group.2um/sulfate_alun35K65Na.low.fd.gif")
a2=read(filename="group.2um/sulfate_alun66K34Na.low.fd.gif")
a3=read(filename="group.2um/sulfate_alun73K27Na.low.fd.gif")
a4=read(filename="group.2um/sulfate_kalun150c.fd.gif")
a5=read(filename="group.2um/sulfate_kalun250c.fd.gif")
a6=read(filename="group.2um/sulfate_kalun450c.fd.gif")
g=a1+a2+a3+a4+a5+a6     #  K-alunite
	q=cat(g,g,axis=z)  # make into 3-band image
	g=cat(g,q,axis=z)  # make into 3-band image

a1=read(filename="group.2um/sulfate_alunNa03.fd.gif")
a2=read(filename="group.2um/sulfate_alunNa56450c.fd.gif")
a3=read(filename="group.2um/sulfate_alunNa78.450c.fd.gif")
a4=read(filename="group.2um/sulfate_na40alun400c.fd.gif")
a5=read(filename="group.2um/sulfate_na63alun300c.fd.gif")
a6=read(filename="group.2um/sulfate_na82alun100c.fd.gif")
a7=read(filename="group.2um/sulfate_naalun150c.fd.gif")
a8=read(filename="group.2um/sulfate_naalun300c.fd.gif")
a9=read(filename="group.2um/sulfate_naalun450c.fd.gif")
aa=read(filename="group.2um/sulfate_ammonalunite.fd.gif")
h=a1+a2+a3+a4+a5+a6+a7+a8+a9+aa    # Na-alunite
	q=cat(h,h,axis=z)  # make into 3-band image
	h=cat(h,q,axis=z)  # make into 3-band image

a1=read(filename="group.2um/alunite.5+musc.5.fd.gif")
a2=read(filename="group.2um/alunite+kaolinite.muscovite.added.fd.gif")
a3=read(filename="group.2um/alunite+musc+pyroph.fd.gif")
a4=read(filename="group.2um/alunite+pyrophyl.fd.gif")
a5=read(filename="group.2um/Kalun+kaol.intmx.fd.gif")
i=a1+a2+a3+a4+a5       # Alunite+other
	q=cat(i,i,axis=z)  # make into 3-band image
	i=cat(i,q,axis=z)  # make into 3-band image

a1=read(filename="group.2um/carbonate_calcite0.7+kaol0.3.fd.gif")
a2=read(filename="group.2um/kaol.75+pyroph.25.fd.gif")
a3=read(filename="group.2um/kaolin.3+smect.7.fd.gif")
a4=read(filename="group.2um/kaolin.5+muscov.medAl.fd.gif")
a5=read(filename="group.2um/kaolin.5+muscov.medhighAl.fd.gif")
a6=read(filename="group.2um/kaolin.5+smect.5.fd.gif")
a7=read(filename="group.2um/kaolinite.3+.5+smectite.5+.7.added.fd.gif")
a8=read(filename="group.2um/kaolinite+muscovite.added.fd.gif")
a9=read(filename="group.2um/kaolin+musc.intimat.fd.gif")
j=a1+a2+a3+a4+a5+a6+a7+a8+a9   # kaolin+other
	q=cat(j,j,axis=z)  # make into 3-band image
	j=cat(j,q,axis=z)  # make into 3-band image

a1=read(filename="group.2um/sulfate_jarosite-K.fd.gif")
a2=read(filename="group.2um/sulfate_jarosite-lowT.fd.gif")
a3=read(filename="group.2um/sulfate_jarosite-Na.fd.gif")
k=a1+a2+a3   # jarosite
	q=cat(k,k,axis=z)  # make into 3-band image
	k=cat(k,q,axis=z)  # make into 3-band image

a1=read(filename="group.2um/sulfate_kieserite.fd.gif")
a2=read(filename="group.2um/sulfate_szomolnokite.fd.gif")
a3=read(filename="group.2um/sulfate_szomolnokite_heated.fd.gif")
a4=read(filename="group.2um/sulfate_gypsum.fd.gif")
l=a1+a2+a3+a4    # sulfates: kieserite szomolnokite gypsum
	q=cat(l,l,axis=z)  # make into 3-band image
	l=cat(l,q,axis=z)  # make into 3-band image

a1=read(filename="group.2um/perchlorate_mg.fd.gif")
a2=read(filename="group.2um/perchlorate_na.fd.gif")
a3=read(filename="group.2um/portlandite.fd.gif")
m=a1+a2+a3         # perchlorate, 2.4 features
	q=cat(m,m,axis=z)  # make into 3-band image
	m=cat(m,q,axis=z)  # make into 3-band image


gbase=read(filename=$1)
if (HasValue(gbase) ==0) {                   # check that read worked
      printf ("read ERROR on file: %s\n",$1)
      printf ("^GEXIT 1\n")
      exit(1)
}

# /info/COLORS.screen.to.printers
#
#      "color"         r    g    b
# a  1 red            255   60    0   (255   50    0 better)
# b  2 green           60  255    0
# c  3 blue             0  105  255
#   
# d  4 yellow         255  255    0
# e  5 magenta        205   60  255
# f  6 cyan             0  255  255
#  
# g  7 army green     150  165    0   (160  175    0 better?)
# h  8 salmon         255  170  170
# i  9 flesh          255  200  155
#  
# j 10 orange         255  110    0   (255  140    0 better?)
# k 11 deep pink      235    0  180
# l 12 yellow green   190  255    0
#
# m 13 lavender       185  120  255
# n 14 sky blue       140  210  255
# o 15 pale sea green 110  255  190
#  
# p 16 white          255  255  255
# q 17 red-pink       255  125  125
# s 18 gold           255  213    0
#
# t 19 mud yellow     186  165    0
# u 20 light pink     255  211  255
#

#  a    montmorillonite group 2.2um      blue
#  b    montmorillonite group 2.3um      sky blue
#  c    phyllosilicates                  green
#  d    Si-OH hydrated silica            white
#  e    kaolinite group                  yellow
#  f    kaolin+alunite                   mud-yellow
#  g    K-alunite                        red
#  h    Na-alunite                       pink
#  i    Alunite+other                    orange
#  j    kaolin+other                     army green
#  k    jarosite                         cyan
#  l    sulfates: kiess szomol gypsum    magenta
#  m    perchlorate, 2.4 features        lavender


argb =  create(1,1,3, format=FLOAT, start=0.0, step=0.0)
brgb =  create(1,1,3, format=FLOAT, start=0.0, step=0.0)
crgb =  create(1,1,3, format=FLOAT, start=0.0, step=0.0)
drgb =  create(1,1,3, format=FLOAT, start=0.0, step=0.0)
ergb =  create(1,1,3, format=FLOAT, start=0.0, step=0.0)
frgb =  create(1,1,3, format=FLOAT, start=0.0, step=0.0)
grgb =  create(1,1,3, format=FLOAT, start=0.0, step=0.0)
hrgb =  create(1,1,3, format=FLOAT, start=0.0, step=0.0)
irgb =  create(1,1,3, format=FLOAT, start=0.0, step=0.0)
jrgb =  create(1,1,3, format=FLOAT, start=0.0, step=0.0)
krgb =  create(1,1,3, format=FLOAT, start=0.0, step=0.0)
lrgb =  create(1,1,3, format=FLOAT, start=0.0, step=0.0)
mrgb =  create(1,1,3, format=FLOAT, start=0.0, step=0.0)

# Colors:
#              Red                  Green                Blue

argb[1,1,1] =    0. ; argb[1,1,2]=   105. ;  argb[1,1,3]= 255.   # blue
brgb[1,1,1] =  140. ; brgb[1,1,2]=   210. ;  brgb[1,1,3]= 255.   # sky blue
crgb[1,1,1] =   60. ; crgb[1,1,2]=   255. ;  crgb[1,1,3]=   0.   # green
drgb[1,1,1] =  255. ; drgb[1,1,2]=   255. ;  drgb[1,1,3]= 255.   # white
ergb[1,1,1] =  255. ; ergb[1,1,2]=   255. ;  ergb[1,1,3]=   0.   # yellow
frgb[1,1,1] =  186. ; frgb[1,1,2]=   165. ;  frgb[1,1,3]=   0.   # mud yellow
grgb[1,1,1] =  255. ; grgb[1,1,2]=    60. ;  grgb[1,1,3]=   0.   # red
hrgb[1,1,1] =  255. ; hrgb[1,1,2]=   150. ;  hrgb[1,1,3]= 200.   # pink
irgb[1,1,1] =  255. ; irgb[1,1,2]=   110. ;  irgb[1,1,3]=   0.   # orange
jrgb[1,1,1] =  160. ; jrgb[1,1,2]=   175. ;  jrgb[1,1,3]=   0.   # army green
krgb[1,1,1] =    0. ; krgb[1,1,2]=   255. ;  krgb[1,1,3]= 255.   # cyan
lrgb[1,1,1] =  255. ; lrgb[1,1,2]=    60. ;  lrgb[1,1,3]= 255.   # magenta
mrgb[1,1,1] =  185. ; mrgb[1,1,2]=   120. ;  mrgb[1,1,3]= 255.   # lavender


xaz=float(a*0)

xaz= xaz + a*(argb/255.)
xaz= xaz + b*(brgb/255.)
xaz= xaz + c*(crgb/255.)
xaz= xaz + d*(drgb/255.)
xaz= xaz + e*(ergb/255.)
xaz= xaz + f*(frgb/255.)
xaz= xaz + g*(grgb/255.)
xaz= xaz + h*(hrgb/255.)
xaz= xaz + i*(irgb/255.)
xaz= xaz + j*(jrgb/255.)
xaz= xaz + k*(krgb/255.)
xaz= xaz + l*(lrgb/255.)
xaz= xaz + m*(mrgb/255.)

xout=byte(xaz+0.5)
xout = bip(xout)

gbasedim=dim(gbase)
x=gbasedim[1,,]

if (x > dualmax) {
	dual = 0
}

if ( dual == 1 ) {
	
	gbase = bip(gbase)
	xout = cat (xout, gbase, axis=x)
}



fout=$2

adim=dim(xout)
if ( adim[1,,] > 5 || adim[2,,] > 5 ) {
	printf ("writing %s\n", fout)
	write (xout, filename=fout, type=png)
} else {
	printf ("not writing %s\n", fout)
	printf ("    image size < 6 pixels\n")
}
