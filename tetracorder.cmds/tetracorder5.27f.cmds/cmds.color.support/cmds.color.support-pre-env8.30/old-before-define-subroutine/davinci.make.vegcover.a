#!/usr/local/bin/davinci -f

# command line:
# prog    gray_base_image  prefix-file-name   [dual|nodual]

dual=0  # no dual

# group.veg/f130924t01p00r10rdn_refl_img_corr-bil20k.v.ch20.base.jpg.base.jpg
# group.veg/veg0.9um.band.fd.gif
# group.veg/veg1.2um.band.fd.gif
# group.veg/veg1.4um.band.fd.gif

a=read(filename="group.veg/vegetation.map.fd.gif")
        if (HasValue(a) ==0) {  # check that read worked
              printf ("read ERROR on results file\n")
              printf ("setting to zero\n")
              a=0
        }
	q=cat(a,a,axis=z)  # make into 3-band image
	a=cat(a,q,axis=z)  # make into 3-band image

b=read(filename="group.veg/vegetation.weak.map.fd.gif")
        if (HasValue(b) ==0) {  # check that read worked
              printf ("read ERROR on results file\n")
              printf ("setting to zero\n")
              b=0
        }
	q=cat(b,b,axis=z)  # make into 3-band image
	b=cat(b,q,axis=z)  # make into 3-band image

c=read(filename="group.veg/vegetation.dry+green.fd.gif")
        if (HasValue(c) ==0) {  # check that read worked
              printf ("read ERROR on results file\n")
              printf ("setting to zero\n")
              c=0
        }
	q=cat(c,c,axis=z)  # make into 3-band image
	c=cat(c,q,axis=z)  # make into 3-band image

d=read(filename="group.veg/vegetation.dry_nonphotosyn.fd.gif")
        if (HasValue(d) ==0) {  # check that read worked
              printf ("read ERROR on results file\n")
              printf ("setting to zero\n")
              d=0
        }
	q=cat(d,d,axis=z)  # make into 3-band image
	d=cat(d,q,axis=z)  # make into 3-band image


gbase=read(filename=$1)
if (HasValue(gbase) ==0) {                   # check that read worked
      printf ("read ERROR on file: %s\n",$1)
      printf ("^GEXIT 1\n")
      exit(1)
}

# /info/COLORS.screen.to.printers
#
#      "color"         r    g    b
#    1 red            255   60    0   (255   50    0 better)
#    2 green           60  255    0
#    3 blue             0  105  255
#   
#    4 yellow         255  255    0
#    5 magenta        205   60  255
#    6 cyan             0  255  255
#  
#    7 army green     150  165    0   (160  175    0 better?)
#    8 salmon         255  170  170
#    9 flesh          255  200  155
#  
#   10 orange         255  110    0   (255  140    0 better?)
#   11 deep pink      235    0  180
#   12 yellow green   190  255    0
#
#   13 lavender       185  120  255
#   14 sky blue       140  210  255
#   15 pale sea green 110  255  190
#  
#   16 white          255  255  255
#   17 red-pink       255  125  125
#   18 gold           255  213    0
#
#   19 mud yellow     186  165    0
#   20 light pink     255  211  255
#

argb =  create(1,1,3, format=FLOAT, start=0.0, step=0.0)
brgb =  create(1,1,3, format=FLOAT, start=0.0, step=0.0)
crgb =  create(1,1,3, format=FLOAT, start=0.0, step=0.0)
drgb =  create(1,1,3, format=FLOAT, start=0.0, step=0.0)

# Colors:
#              Red                  Green                Blue
argb[1,1,1] =   60. ; argb[1,1,2]=   255. ;  argb[1,1,3]=   0.   # green         vegetation.map
brgb[1,1,1] =  150. ; brgb[1,1,2]=   165. ;  brgb[1,1,3]=   0.   # army green    vegetation.weak.map

crgb[1,1,1] =  190. ; crgb[1,1,2]=   255. ;  crgb[1,1,3]=   0.   # yellow green  vegetation.dry+green
drgb[1,1,1] =  255. ; drgb[1,1,2]=   255. ;  drgb[1,1,3]=   0.   # yellow        dry_nonphotosyn


xaz=float(a*0)

xaz= xaz + a*(argb/255.)
xaz= xaz + b*(brgb/255.)
xaz= xaz + c*(crgb/255.)
xaz= xaz + d*(drgb/255.)

xout=byte(xaz+0.5)

gbasedim=dim(gbase)
x=gbasedim[1,,]

if (x > 6000) {
	dual = 0
}
if ( dual == 1 ) {
	
	xout = cat (xout, gbase, axis=x)
}



fout=$2

printf ("writing %s\n", fout)
write (xout, filename=fout, type=png)

