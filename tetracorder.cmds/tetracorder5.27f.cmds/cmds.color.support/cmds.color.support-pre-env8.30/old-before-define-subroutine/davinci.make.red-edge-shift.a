#!/usr/local/bin/davinci -f

# command line:
# prog    gray_base_image  prefix-file-name   [dual|nodual]

dual=0  # no dual

# A master color set.  Just read in the files, assign the colors
# and write the results.    R. Clark 4/16/2015

# first read file to be colored, assign variables
# a1 a2 a2 etc

r1=read(filename="case.red-edge/red.edge.shift.1.depth.gz")
        if (HasValue(r1) ==0) {  # check that read worked
              printf ("read ERROR on results file\n")
              printf ("setting to zero\n")
              r1=0
        }
	q1=cat(r1,r1,axis=z)  # make into 3-band image
	r1=cat(r1,q1,axis=z)  # make into 3-band image

r2=read(filename="case.red-edge/red.edge.shift.2.depth.gz")
        if (HasValue(r2) ==0) {  # check that read worked
              printf ("read ERROR on results file\n")
              printf ("setting to zero\n")
              r2=0
        }
	q2=cat(r2,r2,axis=z)  # make into 3-band image
	r2=cat(r2,q2,axis=z)  # make into 3-band image

# read base gray image

gbase=read(filename=$1)
if (HasValue(gbase) ==0) {                   # check that read worked
      printf ("read ERROR on file: %s\n",$1)
      printf ("^GEXIT 1\n")
      exit(1)
}

# create RGB color multiplier variables
argb =  create(1,1,3, format=FLOAT, start=0.0, step=0.0)

# /info/COLORS.screen.to.printers
#
#      "color"         r    g    b
#    1 red            255   60    0   (255   50    0 better)
#    2 green           60  255    0   ( 50  255    0 better)
#    3 blue             0  105  255
   
#    4 yellow         255  255    0
#    5 magenta        205   60  255   (205   40  255 better)
#    6 cyan             0  255  255
  
#    7 army green     150  165    0   (160  175    0 better?)
#    8 salmon         255  170  170
#    9 flesh          255  200  155
  
#   10 orange         255  110    0   (255  120    0 better?)
#   11 deep pink      235    0  180
#   12 yellow green   190  255    0

#   13 lavender       185  120  255
#   14 sky blue       140  210  255
#   15 pale sea green 110  255  190
  
#   16 white          255  255  255
#   17 red-pink       255  125  125
#   18 gold           255  213    0

#   19 mud yellow     186  165    0
#   20 light pink     255  211  255


# Colors:
#              Red                  Green                Blue    color variable name

argb[1,1,1] =  255. ; argb[1,1,2]=    50. ;  argb[1,1,3]=   0. ; c_red          = argb  # red
argb[1,1,1] =   50. ; argb[1,1,2]=   255. ;  argb[1,1,3]=   0. ; c_green        = argb  # green
argb[1,1,1] =    0. ; argb[1,1,2]=   105. ;  argb[1,1,3]= 255. ; c_blue         = argb  # blue

argb[1,1,1] =  255. ; argb[1,1,2]=   255. ;  argb[1,1,3]=   0. ; c_yellow       = argb  # yellow
argb[1,1,1] =  255. ; argb[1,1,2]=    40. ;  argb[1,1,3]= 255. ; c_magenta      = argb  # magenta
argb[1,1,1] =    0. ; argb[1,1,2]=   255. ;  argb[1,1,3]= 255. ; c_cyan         = argb  # cyan

argb[1,1,1] =  150. ; argb[1,1,2]=   165. ;  argb[1,1,3]=   0. ; c_armygreen    = argb  # army green
argb[1,1,1] =  255. ; argb[1,1,2]=   170. ;  argb[1,1,3]= 170. ; c_salmon       = argb  # salmon
argb[1,1,1] =  255. ; argb[1,1,2]=   200. ;  argb[1,1,3]= 155. ; c_flesh        = argb  # flesh

argb[1,1,1] =  255. ; argb[1,1,2]=   120. ;  argb[1,1,3]=   0. ; c_orange       = argb  # orange
argb[1,1,1] =  235. ; argb[1,1,2]=     0. ;  argb[1,1,3]= 180. ; c_deeppink     = argb  # deep pink
argb[1,1,1] =  190. ; argb[1,1,2]=   255. ;  argb[1,1,3]=   0. ; c_yellowgreen  = argb  # yellow green

argb[1,1,1] =  185. ; argb[1,1,2]=   120. ;  argb[1,1,3]= 255. ; c_lavender     = argb  # lavender
argb[1,1,1] =  140. ; argb[1,1,2]=   210. ;  argb[1,1,3]= 255. ; c_skyblue      = argb  # sky blue
argb[1,1,1] =  110. ; argb[1,1,2]=   255. ;  argb[1,1,3]= 190. ; c_paleseagreen = argb  # pale sea green

argb[1,1,1] =  255. ; argb[1,1,2]=   255. ;  argb[1,1,3]= 255. ; c_white        = argb  # white
argb[1,1,1] =  255. ; argb[1,1,2]=   125. ;  argb[1,1,3]= 125. ; c_redpink      = argb  # red-pink
argb[1,1,1] =  255. ; argb[1,1,2]=   213. ;  argb[1,1,3]=   0. ; c_gold         = argb  # gold

argb[1,1,1] =  186. ; argb[1,1,2]=   165. ;  argb[1,1,3]=   0. ; c_mudyellow    = argb  # mud yellow
argb[1,1,1] =  255. ; argb[1,1,2]=   211. ;  argb[1,1,3]= 255. ; c_lightpink    = argb  # light pink


xaz=float(r1*0)

##
## shift     peak height    DN    Possible image stretch
## -----------------------------------------------------
##   0  nm       0           0     cyan            blue
##   0.5         0.038      15     green  0.5 nm   cyan
##   1           0.076      30     yellow   1 nm   green        
##   2           0.152      60     green    2 nm   yellowgreen
##   3           0.228      90     red      3 nm   yellow
##   4           0.304     120     white    4 nm   gold
##   5           0.380     150     white    5 nm   orange
##   6           0.456     180     white    6 nm   red-pink
##   7           0.532     210     white    7 nm   magenta
##   8           0.608     240     white    8 nm + red   

# we have 10 levels to split intensity over.  first do r1

a1=r1 ; a1=a1[ where a1 >   7 ] = 0 ; a1=a1/a1
a2=r1 ; a2=a2[ where a2 <   7 ] = 0 ; a2=a2[ where a2 >  23 ] = 0 ; a2=a2/a2
a3=r1 ; a3=a3[ where a3 <  22 ] = 0 ; a3=a3[ where a3 >  45 ] = 0 ; a3=a3/a3
a4=r1 ; a4=a4[ where a4 <  44 ] = 0 ; a4=a4[ where a4 >  75 ] = 0 ; a4=a4/a4
a5=r1 ; a5=a5[ where a5 <  74 ] = 0 ; a5=a5[ where a5 > 105 ] = 0 ; a5=a5/a5
a6=r1 ; a6=a6[ where a6 < 104 ] = 0 ; a6=a6[ where a6 > 135 ] = 0 ; a6=a6/a6
a7=r1 ; a7=a7[ where a7 < 134 ] = 0 ; a7=a7[ where a7 > 165 ] = 0 ; a7=a7/a7
a8=r1 ; a8=a8[ where a8 < 164 ] = 0 ; a8=a8[ where a8 > 195 ] = 0 ; a8=a8/a8
a9=r1 ; a9=a9[ where a9 < 194 ] = 0 ; a9=a9[ where a9 > 225 ] = 0 ; a9=a9/a9
aa=r1 ; aa=aa[ where aa < 224 ] = 0 ; aa=aa/aa

xaz= xaz + a1*( c_blue         )   # 
xaz= xaz + a2*( c_cyan         )   # 
xaz= xaz + a3*( c_green        )   # 
xaz= xaz + a4*( c_yellowgreen  )   # 
xaz= xaz + a5*( c_yellow       )   # 
xaz= xaz + a6*( c_gold         )   # 
xaz= xaz + a7*( c_orange       )   # 
xaz= xaz + a8*( c_redpink      )   # 
xaz= xaz + a9*( c_magenta      )   # 
xaz= xaz + aa*( c_red          )   # 

# now do r2, use same colors but darker.

a1=r2 ; a1=a1[ where a1 >   8 ] = 0 ; a1=a1/a1
a2=r2 ; a2=a2[ where a2 <   7 ] = 0 ; a2=a2[ where a2 >  23 ] = 0 ; a2=a2/a2
a3=r2 ; a3=a3[ where a3 <  22 ] = 0 ; a3=a3[ where a3 >  45 ] = 0 ; a3=a3/a3
a4=r2 ; a4=a4[ where a4 <  44 ] = 0 ; a4=a4[ where a4 >  75 ] = 0 ; a4=a4/a4
a5=r2 ; a5=a5[ where a5 <  74 ] = 0 ; a5=a5[ where a5 > 105 ] = 0 ; a5=a5/a5
a6=r2 ; a6=a6[ where a6 < 104 ] = 0 ; a6=a6[ where a6 > 135 ] = 0 ; a6=a6/a6
a7=r2 ; a7=a7[ where a7 < 134 ] = 0 ; a7=a7[ where a7 > 165 ] = 0 ; a7=a7/a7
a8=r2 ; a8=a8[ where a8 < 164 ] = 0 ; a8=a8[ where a8 > 195 ] = 0 ; a8=a8/a8
a9=r2 ; a9=a9[ where a9 < 194 ] = 0 ; a9=a9[ where a9 > 225 ] = 0 ; a9=a9/a9
aa=r2 ; aa=aa[ where aa < 224 ] = 0 ;  aa=aa/aa

xaz= xaz + a1*( c_blue            )   # 
xaz= xaz + a2*( c_cyan            )   # 
xaz= xaz + a3*( c_green           )   # 
xaz= xaz + a4*( c_yellowgreen     )   # 
xaz= xaz + a5*( c_yellow          )   # 
xaz= xaz + a6*( c_gold            )   # 
xaz= xaz + a7*( c_orange          )   # 
xaz= xaz + a8*( c_red             )   # 
xaz= xaz + a9*( c_magenta         )   # 
xaz= xaz + aa*( c_white           )   # 

xout=byte(xaz+0.5)   # final output image, 3 bands, color

gbasedim=dim(gbase)
x=gbasedim[1,,]      # base image width

if (x > 6000) {
	dual = 0
}
if ( dual == 1 ) {
	
	xout = cat (xout, gbase, axis=x)
}

fout=$2

printf ("writing %s\n", fout)
write (xout, filename=fout, type=png)

