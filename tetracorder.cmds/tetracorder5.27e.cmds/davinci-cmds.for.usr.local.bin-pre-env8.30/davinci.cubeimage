#!/usr/local/bin/davinci -f

#######!/usr/bin/env -S davinci -f  


###################################################
# User:             Date:  Thu Feb  8 14:11:20 MST 2001
###################################################
# greatly expanded with options 4/27-28/2004 -RNC

if ( $argc < 3 ) {
	printf ("ERROR: insufficient arguments\n\n")
	printf ("Usage:\n")
	printf ("davinci.cubeimage cubefilename  channel  outputfilename_noextension [options]\n\n")
	printf ("options:\n")
	printf ("        isis     = isis output format\n")
	printf ("        vicar    = vicar output format\n")
	printf ("        gif      = gif output format also\n\n")
	printf ("        png      = png output format also\n\n")
        p="%"
	printf ("        2        = 2 %s min-max scaling\n",p)
	printf ("        max      = 0 to max output scaling\n")
	printf ("        x factor = multiply by factor, example: x 2.35\n")


	exit(1)
}

if ( $1 == "?" || $1 == "h" || $1 == "help" ) {

	printf ("davinci.cubeimage extracts a single band vicar image from data cube\n")
	printf ("Usage:\n")
	printf ("davinci.cubeimage cubefilename  channel  outputfilename_noextension [options]\n\n")
	printf ("options:\n")
	printf ("        isis     = isis output format\n")
	printf ("        vicar    = vicar output format\n")
	printf ("        gif      = gif output format also\n")
        p="%"
	printf ("        2        = 2 %s min-max scaling\n",p)
	printf ("        max      = 0 to max output scaling\n")
	printf ("        x factor = multiply by factor, example: x 2.35\n")

	exit(0)
}

f=$1

chan=atoi($2)
if ( chan < 1 ) {
	printf ("ERROR: channel number <1: %s\n", $2)
	printf ("exit\n")
	exit(1)
}

out=$3

ftype="vicar"    # default
iflag1="2scale"  # default
gifimage="no"    # default
pngimage="no"    # default

if ( $argc > 3 ) {
	for (j = 4; j <= $argc; j = j +1 ) {
		if ($argv[j] == "vicar") {
			ftype="vicar"
		} else if ($argv[j] == "isis") {
			ftype="isis"
		} else if ($argv[j] == "2" ) {
			iflag1="2scale"
		} else if ($argv[j] == "max" ) {
			iflag1="maxscale"
		} else if ($argv[j] == "x" ) {
			iflag1="multiply"
			xfactor=atof($argv[j+1])
		} else if ($argv[j] == "gif" ) {
			gifimage="yes"
                        ftype="gif"
		} else if ($argv[j] == "png" ) {
			pngimage="yes"
                        ftype="png"
		}
	}
}

a=read(filename=f,record=chan)


mm=moment(a)
printf ("%s min = %d   max = %d\n", f, mm[1,,], mm[2,,])

if (iflag1 == "2scale") {
	r=mm[2,,]-mm[1,,]   # max-min

	r02=r*.02  # 2% of min to max range

	rmax=mm[2,,]-r02    # max - 2% of range

	b= (float(a)-r02)*255.0/rmax 

} else if (iflag1 == "maxscale") {

	rmax=mm[2,,]
	printf("scaling to maximum: %f\n", rmax)
	b= (float(a))*255.0/rmax

} else if (iflag1 == "multiply") {

	b= (float(a))*xfactor

}

fout=out
if (ftype == "isis") {
	fout=out + ".isis"
	write (byte(b),filename=fout,type=isis)
} 
if (ftype == "vicar" ) {
	fout=out + ".v"
	write (byte(b),filename=fout,type=vicar)
}


if (gifimage == "yes") {

	# no longer needed
	#if (ftype != "vicar") { # also write a vicar file

	#	fout=out+".v"
	#	write (byte(b),filename=fout,type=vicar)

	#}

	fout2=out+".gif"

	write (byte(b),filename=fout2, type=gif)

	# old
	#scmd="vicartopgm " + fout + " | ppmtogif > " + fout2
	#printf ("%s\n",scmd)

}

if (pngimage == "yes") {

	fout2=out+".png"

	write (byte(b),filename=fout2, type=png)

}
