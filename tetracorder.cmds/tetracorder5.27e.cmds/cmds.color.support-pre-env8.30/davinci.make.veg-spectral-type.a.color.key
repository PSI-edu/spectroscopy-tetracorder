#!/usr/local/bin/davinci -f
#####!/usr/bin/env -S davinci -f  

###########################  was:  #!/usr/local/bin/davinci -f


#verbose=0

# execute this program in the same directory asthe source code below
source ("davinci.master.colors")

# 23 available colors:
# c_red      c_green          c_blue       c_yellow        c_magenta       c_cyan      c_armygreen  
# c_salmon   c_flesh          c_orange     c_deeppink      c_yellowgreen   c_lavender  c_bluegreen
# c_skyblue  c_paleseagreen   c_white      c_redpink       c_gold          c_mudyellow c_lightpink
# c_purple

# a blue to red 12 spectral color sequence:
#
# c_purple c_blue c_skyblue c_cyan c_bluegreen c_green c_paleseagreen c_yellowgreen c_yellow c_gold c_orange c_red

###########################################################################

#if ( $argc < 4 ) {
#  printf ("^GERROR: insufficient arguments\n")
#  printf ("   davinci.make.1-color-key  red green blue outputfile [-ramp]\n\n")
#  printf ("example:\n\n")
#  printf ("   davinci.make.1-color-key  255 255   10   yellow.png -ramp\n")
#  exit(1)
#}
#
xramp=0
#if ( $argc >4 ) {
#
#	if ( $5 == "-ramp" ) {
#		xramp = 1
#	}
#}

# box
a=create(32,30,3, format=FLOAT, start=255.0, step=0.0)

whitebox = a/255.0    # white box 32 x 30 pixels, max =1.0

yblackspacer = byte(whitebox[,1:15,]*0)   # for vertical stack
xblackspacer = byte(whitebox[1:15,,]*0)   # for horizontal stack

xaz = float(a)/255.0   # white box, floating point = 1.0

xramp=1  # in future, allow for no ramp
if (xramp == 1) {     # make ramp

	xf=0.94
	xaz[,10:30,] = xaz[,10:30,]*xf
	xaz[,11:30,] = xaz[,11:30,]*xf
	xaz[,12:30,] = xaz[,12:30,]*xf
	xaz[,13:30,] = xaz[,13:30,]*xf
	xaz[,14:30,] = xaz[,14:30,]*xf
	xaz[,15:30,] = xaz[,15:30,]*xf
	xaz[,16:30,] = xaz[,16:30,]*xf
	xaz[,17:30,] = xaz[,17:30,]*xf
	xaz[,18:30,] = xaz[,18:30,]*xf
	xaz[,19:30,] = xaz[,19:30,]*xf
	xaz[,20:30,] = xaz[,20:30,]*xf
	xaz[,21:30,] = xaz[,21:30,]*xf
	xaz[,22:30,] = xaz[,22:30,]*xf
	xaz[,23:30,] = xaz[,23:30,]*xf
	xaz[,24:30,] = xaz[,24:30,]*xf
	xaz[,25:30,] = xaz[,25:30,]*xf
	xaz[,26:30,] = xaz[,26:30,]*xf
	xaz[,27:30,] = xaz[,27:30,]*xf
	xaz[,28:30,] = xaz[,28:30,]*xf
	xaz[,29:30,] = xaz[,29:30,]*xf
	xaz[,30:30,] = xaz[,30:30,]*xf
}

framp = xaz  # gray ramp, floating point, 0 to 1.0
printf("framp=")
moment(framp)

# 23 available colors:
# c_red        c_green          c_blue          c_yellow        c_magenta       c_cyan 
# c_armygreen  c_salmon         c_flesh         c_orange        c_deeppink      c_yellowgreen
# c_lavender   c_skyblue        c_paleseagreen  c_white         c_redpink       c_gold
# c_mudyellow  c_lightpink      c_bluegreen     c_purple


##################
#  horizontal key, spacer = xblackspacer

#            file                           color                title                      spectral library record, convolved
# case.veg.type//vegetation.type1.fd.gif    c_green         #  Lawn_Grass GDS91                       y 7260
# case.veg.type//vegetation.type2.fd.gif    c_yellow        #  Aspen_Leaf-A DW92-2                    y 7050
# case.veg.type//vegetation.type3.fd.gif    c_redpink       #  Fir_Tree IH91-2                        y 7170
# case.veg.type//vegetation.type4.fd.gif    c_mudyellow     #  Juniper_Bush IH91-4B                   y 7254
# case.veg.type//vegetation.type5.fd.gif    c_paleseagreen  #  Pinon_Pine ANP92-14A needle            y 7464
# case.veg.type//vegetation.type6.fd.gif    c_orange        #  Sage_Brush IH91-1B                     y 7482
# case.veg.type//vegetation.type7.fd.gif    c_yellowgreen   #  Walnut_Leaf SUN (Green)                y 7536
# case.veg.type//vegetation.type8.fd.gif    c_lavender      #  Blackbrush ANP92-9A leaves             y 7068
# case.veg.type//vegetation.type9.fd.gif    c_blue          #  Blue_Spruce DW92-5 needle              y 7074
# case.veg.type//vegetation.type10.fd.gif   c_armygreen     #  Maple_Leaves DW92-1                    y 7446
# case.veg.type//vegetation.type11.fd.gif   c_cyan          #  Rabbitbrush ANP92-27                   y 7470
# case.veg.type//vegetation.type12.fd.gif   c_skyblue       #  Russian_Olive DW92-4                   y 7476
# case.veg.type//vegetation.type13.fd.gif   c_red           #  Saltbrush ANP92-31A                    y 7518
# case.veg.type//vegetation.type14.fd.gif   c_armygreen     #  LeafySpurge Spurge-A1-Jun98            y 7272
# case.veg.type//vegetation.type15.fd.gif   c_magenta       #  LeafySpurge Spurge-A1-Oct97            y 7278

xout = byte( whitebox * c_green  * framp + 0.5 )   # starting point
xout = cat (xout, xblackspacer, axis=x)

x=byte( whitebox * c_yellow * framp + 0.5 )
xout = cat (xout, x, axis=x)
xout = cat (xout, xblackspacer, axis=x)

x=byte( whitebox * c_redpink * framp + 0.5 )
xout = cat (xout, x, axis=x)
xout = cat (xout, xblackspacer, axis=x)

x=byte( whitebox * c_mudyellow * framp + 0.5 )
xout = cat (xout, x, axis=x)
xout = cat (xout, xblackspacer, axis=x)

x=byte( whitebox * c_paleseagreen * framp + 0.5 )
xout = cat (xout, x, axis=x)
xout = cat (xout, xblackspacer, axis=x)

x=byte( whitebox * c_orange * framp + 0.5 )
xout = cat (xout, x, axis=x)
xout = cat (xout, xblackspacer, axis=x)

x=byte( whitebox * c_yellowgreen * framp + 0.5 )
xout = cat (xout, x, axis=x)
xout = cat (xout, xblackspacer, axis=x)

x=byte( whitebox * c_lavender * framp + 0.5 )
xout = cat (xout, x, axis=x)
xout = cat (xout, xblackspacer, axis=x)

x=byte( whitebox * c_blue * framp + 0.5 )
xout = cat (xout, x, axis=x)
xout = cat (xout, xblackspacer, axis=x)

x=byte( whitebox * c_armygreen * framp + 0.5 )
xout = cat (xout, x, axis=x)
xout = cat (xout, xblackspacer, axis=x)

x=byte( whitebox * c_cyan * framp + 0.5 )
xout = cat (xout, x, axis=x)
xout = cat (xout, xblackspacer, axis=x)

x=byte( whitebox * c_skyblue * framp + 0.5 )
xout = cat (xout, x, axis=x)
xout = cat (xout, xblackspacer, axis=x)

x=byte( whitebox * c_red * framp + 0.5 )
xout = cat (xout, x, axis=x)
xout = cat (xout, xblackspacer, axis=x)

x=byte( whitebox * c_armygreen * framp + 0.5 )
xout = cat (xout, x, axis=x)
xout = cat (xout, xblackspacer, axis=x)

x=byte( whitebox * c_magenta * framp + 0.5 )
xout = cat (xout, x, axis=x)
xout = cat (xout, xblackspacer, axis=x)


xout = byte(xout)
xout = bip(xout)
fout="color-key-ramp.veg-spectral-type.a.png"


adim=dim(xout)
if ( adim[1,,] > 5 || adim[2,,] > 5 ) {
	printf ("writing %s\n", fout)
	write (xout, filename=fout, type=png)
} else {
	printf ("not writing %s\n", fout)
	printf ("    image size < 6 pixels\n")
}
