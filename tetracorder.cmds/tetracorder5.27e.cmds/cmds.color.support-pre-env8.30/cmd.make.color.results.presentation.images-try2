#!/bin/sh

# run this from in the cmds.abundances directory in your mapping run

# cd cmds.abundances
# ./cmd.make.color.results.small.images


if [ ! -d "color.results" ]
then
	echo "ERROR: directory color.results not found from this location"
	echo "are you in the correct directory?"
	echo "run this command from your tetracorder mapping directory:"
        echo "    ./cmds.color.support/cmd.make.color.results.presentation.images"
	echo "exit 1"
	exit 1
fi


outdir="color.results-presentationsize"

outsize=1280   # image max output dimension not including label

if [ ! -d "$outdir" ]
then
	echo "mkdir $outdir"
	mkdir $outdir
fi

keydir=${outdir}/keys
if [ ! -d "$keydir" ]
then
	echo "mkdir $keydir"
	mkdir $keydir
fi

smallimagedir=${outdir}/smallimages
if [ ! -d "$smallimagedir" ]
then
	echo "mkdir $smallimagedir"
	mkdir $smallimagedir
fi

shortcubeid='tet'
if [ -f "AAA.info/shortcubeid.txt" ]
then
        shortcubeid=`head -1 AAA.info/shortcubeid.txt | awk '{ print $1 }'`
fi

echo "making color results image size for presentations" `date`
echo " "

# get image dimensions

afile=`ls -1 color.results/*.png | head -1`
imwitdh=`identify -ping -format '%w'  $afile`
imheight=`identify -ping -format '%h'  $afile`

echo "color results image ise: witdth= $imwitdh   height= $imheight"
echo " "

immax=$imwitdh
if [ "$imheight" -gt "$imwitdh" ]
then
	immax=$imheight
fi

imscale=1.0
if [ "$immax" -gt "$outsize" ]
then
	imscale=`echo "scale=4;$outsize/$immax" | bc`
	
fi

echo "scale color image results by $imscale"
echo " "

#  define function makesmallkey 

makesmallkey () {
	b=`echo $i | grep "$a"`
	if [ -n "$b" ]
	then
		aa=`basename $a .png`
		cfile=`basename $i $a`
		keypnm=`echo $key | sed -e 's/png$/pnm/'`
		echo "###### makesmallkey: aa= $aa"
		echo "###### makesmallkey: cfile= $cfile"
		keyfileout="$keydir/$keypnm"

		echo "pngtopnm color.keys/$key | pnmscale 0.67 | pnmtopng > $keyfileout"
		pngtopnm color.keys/$key | pnmscale 0.67 > $keyfileout
	fi
}

makesmallimage () {

	if [ "$imscale" = "1.0" ]
	then
		cp -a $i $smallimagedir     # copy without resizing
	else
		bimage=`basename $i`
		echo "pngtopnm $i | pnmscale $imscale | pnmtopng > $smallimagedir/$bimage"
		pngtopnm $i | pnmscale $imscale > $smallimagedir/$bimagepnm
	fi
}
catsmallimage () {

		echo "concating imgages   $smallimagedir/$bimage   $keyfileout"
		pnmcat -black -topbottom -jleft  $smallimagedir/$bimage $keyfileout | pnmtojpeg --quality=90 > $outdir/$outimage
}


for i in color.results/*.png
do
	echo "$i"

	bimage=`basename $i .png`
	bimagepnm=`basename $i .pnm`
	outimage=${bimage}+label$outsize.jpg

                #   color.result name                                color.keys  key file

                # _1.5um.broadfeats.png                               key_1.5um-broadfeats.a.png
                # _1.9um.water.band.position.png                      key_1.9-water.a.png
                # _1.9um.water.sulfates.band.position.png             key_1.9-water-sulfates.a.png
                # _1.9um.water.wave.position.a.png                    key_water-map-1.9-2um_labels_b.png
                # _1micron-minerals-a.png                             key_1um-map.fe2+,fe3+.a-1200w.png
                # _2micron-minerals-b4.png                            key_2um-mins-b4-layout-1200w.png   
                # _2micron-minerals.png                               key_2micron-mins_labels_a.png
                # _2micron-minerals-muscovite-comp.png                key_2um-mins-muscovite-comp-layout-1200w.png
                # _2micron-mins-emit8.png                             key_2um-mins-emit8-layout-1200w.png
                # _hematite+goethite.grain.size-a.png                 key_hematite+goethite.grain.size.a-wide.png
                # _prehnite-chlorite-mix+perchlorate.png              key_prehnite-chloriteserp-perchlorate_labels_a.png
                # _pyroxene.2um.band.position.png                     key_pyroxene_labels_a.png
                # _red-edge-shift-a.png                               key_red-edge-shift.a.png
                # _vegetation-cover-a.png                             key_vegetation-cover.a.png
                # _veg,water,snow.png                                 key_veg,water,snow.a.png
                # _water-a.png                                        key_water.a.png
                ########################################################################################

	a="_1.5um.broadfeats.png"
	if [ `echo $i | grep $a` ]
	then

		echo "scaling image $i  by $imscale" 
		makesmallimage

		########################################################################################
		#   color.result name                                color.keys  key file
		# _1.5um.broadfeats.png                               key_1.5um-broadfeats.a.png

		key="key_1.5um-broadfeats.a.png"
		makesmallkey
		catsmallimage

	elif [ `echo $i | grep $a` ]
	then

		echo "scaling image $i  by $imscale" 
		makesmallimage

		########################################################################################
		#   color.result name                                color.keys  key file
		# _1.9um.water.band.position.png                      key_1.9-water.a.png

		a="_1.9um.water.band.position.png"
		key="key_1.9-water.a.png"
		makesmallkey
		catsmallimage

	elif [ `echo $i | grep $a` ]
	then

		echo "scaling image $i  by $imscale" 
		makesmallimage

		########################################################################################
		#   color.result name                                color.keys  key file
		# _1.9um.water.sulfates.band.position.png             key_1.9-water-sulfates.a.png

		a="_1.9um.water.sulfates.band.position.png"
		key="key_1.9-water-sulfates.a.png"
		makesmallkey
		catsmallimage

	elif [ `echo $i | grep $a` ]
	then

		echo "scaling image $i  by $imscale" 
		makesmallimage

		########################################################################################
		#   color.result name                                color.keys  key file
		# _1.9um.water.wave.position.a.png                    key_water-map-1.9-2um_labels_b.png

		a="_1.9um.water.wave.position.a.png"
		key="key_water-map-1.9-2um_labels_b.png"
		makesmallkey
		catsmallimage

	elif [ `echo $i | grep $a` ]
	then

		echo "scaling image $i  by $imscale" 
		makesmallimage

		########################################################################################
		#   color.result name                                color.keys  key file
		# _1micron-minerals-a.png                             key_1um-map.fe2+,fe3+.a-1200w.png

		a="_1micron-minerals-a.png"
		key="key_1um-map.fe2+,fe3+.a-1200w.png"
		makesmallkey
		catsmallimage

	elif [ `echo $i | grep $a` ]
	then

		echo "scaling image $i  by $imscale" 
		makesmallimage

		########################################################################################
		#   color.result name                                color.keys  key file
		# _2micron-minerals-b4.png                            key_2um-mins-b4-layout-1200w.png   

		a="_2micron-minerals-b4.png"
		key="key_2um-mins-b4-layout-1200w.png"
		makesmallkey
		catsmallimage

	elif [ `echo $i | grep $a` ]
	then

		echo "scaling image $i  by $imscale" 
		makesmallimage

		########################################################################################
		#   color.result name                                color.keys  key file
		# _2micron-minerals.png                               key_2micron-mins_labels_a.png

		a="_2micron-minerals.png"
		key="key_2micron-mins_labels_a.png"
		makesmallkey
		catsmallimage

	elif [ `echo $i | grep $a` ]
	then

		echo "scaling image $i  by $imscale" 
		makesmallimage

		########################################################################################
		#   color.result name                                color.keys  key file
		# _2micron-minerals-muscovite-comp.png                key_2um-mins-muscovite-comp-layout-1200w.png

		a="_2micron-minerals-muscovite-comp.png"
		key="key_2um-mins-muscovite-comp-layout-1200w.png"
		makesmallkey
		catsmallimage

	elif [ `echo $i | grep $a` ]
	then

		echo "scaling image $i  by $imscale" 
		makesmallimage

		########################################################################################
		#   color.result name                                color.keys  key file
		# _2micron-mins-emit8.png                             key_2um-mins-emit8-layout-1200w.png

		a="_2micron-mins-emit8.png"
		key="key_2um-mins-emit8-layout-1200w.png"
		makesmallkey
		catsmallimage

	elif [ `echo $i | grep $a` ]
	then

		echo "scaling image $i  by $imscale" 
		makesmallimage

		########################################################################################
		#   color.result name                                color.keys  key file
		# _hematite+goethite.grain.size-a.png                 key_hematite+goethite.grain.size.a-wide.png

		a="_hematite+goethite.grain.size-a.png"
		key="key_hematite+goethite.grain.size.a-wide.png"
		makesmallkey
		catsmallimage

	elif [ `echo $i | grep $a` ]
	then

		echo "scaling image $i  by $imscale" 
		makesmallimage

		########################################################################################
		#   color.result name                                color.keys  key file
		# _prehnite-chlorite-mix+perchlorate.png              key_prehnite-chloriteserp-perchlorate_labels_a.png

		a="_prehnite-chlorite-mix+perchlorate.png"
		key="key_prehnite-chloriteserp-perchlorate_labels_a.png"
		makesmallkey
		catsmallimage

	elif [ `echo $i | grep $a` ]
	then

		echo "scaling image $i  by $imscale" 
		makesmallimage

		########################################################################################
		#   color.result name                                color.keys  key file
		# _pyroxene.2um.band.position.png                     key_pyroxene_labels_a.png

		a="_pyroxene.2um.band.position.png"
		key="key_pyroxene_labels_a.png"
		makesmallkey
		catsmallimage

	elif [ `echo $i | grep $a` ]
	then

		echo "scaling image $i  by $imscale" 
		makesmallimage

		########################################################################################
		#   color.result name                                color.keys  key file
		# _red-edge-shift-a.png                               key_red-edge-shift.a.png

		a="_red-edge-shift-a.png"
		key="key_red-edge-shift.a.png"
		makesmallkey
		catsmallimage

	elif [ `echo $i | grep $a` ]
	then

		echo "scaling image $i  by $imscale" 
		makesmallimage

		########################################################################################
		#   color.result name                                color.keys  key file
		# _vegetation-cover-a.png                             key_vegetation-cover.a.png

		a="_vegetation-cover-a.png"
		key="key_vegetation-cover.a.png"
		makesmallkey
		catsmallimage

	elif [ `echo $i | grep $a` ]
	then

		echo "scaling image $i  by $imscale" 
		makesmallimage

		########################################################################################
		#   color.result name                                color.keys  key file
		# _veg,water,snow.png                                 key_veg,water,snow.a.png

		a="_veg,water,snow.png"
		key="key_veg,water,snow.a.png"
		makesmallkey
		catsmallimage

	elif [ `echo $i | grep $a` ]
	then

		echo "scaling image $i  by $imscale" 
		makesmallimage

		########################################################################################
		#   color.result name                                color.keys  key file
		# _water-a.png                                        key_water.a.png

		a="_water-a.png"
		key="key_water.a.png"
		makesmallkey
		catsmallimage

	else
		echo "$outdir/$ofile already exists"
	fi

	# now delete the intermediate directories

	echo "deleting intermediate files and directories with pnm files: keys smallimages"

	cd $outdir
	#rm -rf keys
	#rm -rf smallimages

done
