#!/usr/local/bin/davinci -f
#####!/usr/bin/env -S davinci -f  

###########################  was:  #!/usr/local/bin/davinci -f



# command line:
# prog    gray_base_image  prefix-file-name   [dual|nodual]

prog="davinci.make.3.5um-feats.color.a"               # CHANGE THIS if program name changes

####################  Begin static: no need to change inything in this section ################

if ($argc < 2) {

	printf("Insufficient input\n")
	printf("%s input_gray_image  outputcolorimage\n", prog)
	printf("exit 1\n")
	exit(1)
}


dual    = 1     # default color + gray image 
dualmax = 2000  # no dual if width is greater than this

if ($argc >= 3) {

	if ( "$3" == "nodual" ) {
		dual = 0
	}
	if ( "$3" == "dual" ) {
		dual = 1
		dualmax = 999999 
	}
}

# read base gray image

gbase=read(filename=$1)
if (HasValue(gbase) ==0) {                   # check that read worked
      printf ("read ERROR on file: %s\n",$1)
      printf ("^GEXIT 1\n")
      exit(1)
}

# A master color set.  Just read in the files, assign the colors
# and write the results.    R. Clark 4/16/2015 - 11/16/2015
# execute this program in the same directory asthe source code below
source ("cmds.color.support/davinci.master.colors")

# available colors:
# c_red     c_green          c_blue       c_yellow        c_magenta       c_cyan          c_armygreen  
# c_salmon  c_flesh          c_orange     c_deeppink      c_yellowgreen   c_lavender      c_bluegreen
# c_skyblue c_paleseagreen   c_white      c_redpink       c_gold          c_mudyellow     c_lightpink
# c_purple

# a blue to red 12 spectral color sequence:
#
# c_purple c_blue c_skyblue c_cyan c_bluegreen c_green c_paleseagreen c_yellowgreen c_yellow c_gold  c_orange c_red

# a = first input image, 3-band color, xcolor = the color output image, RGB float
# colorout = the color output image, 3-byte RGB


define read_an_image(1,1) {

	# read a gray-scale image and convert to 3-bands

	afile = $1   # file to read
	printf ("reading file %s\n", afile)
	aaa=read(filename=afile)
	if (HasValue(aaa) ==0) {  # check that read worked
		printf ("read ERROR on file: %s\n",afile)
		printf ("setting to zero\n")
		aaa=0
	}
	qqq = cat(aaa,aaa,axis=z)  # make into 2-band image
	aaa = cat(aaa,qqq,axis=z)  # make into 3-band image

	return (aaa)

}  # end define



###################   begin custom section ##########################################

#                                                  center (um)     width (um)
# A u 456  BHVO-2F+4%_Benzene                         3.237  3.297                    doublet
# A y1272  Clinochlore_Fe SC-CCa-1.c s06crj3a=aa      3.xxxx           0.xxxx         text
# A y 918  Calcite WS272 s06crj3a=aaa
# A y1578  Dolomite HS102.3B s06crj3a=bbb
# A y2766  Knebelite HS419.3B s06crj3a=cbb
# A y5928  Magnesite+Hydroma HS47.3B s06crj3a=aa_     3.27   3.42
# A y3552  Niter GDS43 (K-Saltpeter) s06crj3a=aa_     3.65
# A u 396  BHVO-2F+4%_1-Nonyne                        3.41
# A u 414  BHVO-2F+4%_1-Pentene                       3.37
# A u 516  BHVO-2F+4%_Pyridine                        3.24
# A u 552  BHVO-2F+8%_Nitrobenzene                    3.25
# A u 348  BHVO-2F+4%_Hydrogen Peroxide               3.52

# 22 available colors:
# c_red     c_green          c_blue       c_yellow        c_magenta       c_cyan          c_armygreen  
# c_salmon  c_flesh          c_orange     c_deeppink      c_yellowgreen   c_lavender      c_bluegreen
# c_skyblue c_paleseagreen   c_white      c_redpink       c_gold          c_mudyellow     c_lightpink
# c_purple

# first image:

a = read_an_image("group.3.5um_curve/carbonate_calcite_3.5um_curvc.fd.gif")

	# set up output image xcolor:
	xcolor=float(a*0)
	xdim=dim(a)

	# now add the colors

c=c_purple
xcolor= xcolor + a*( c /255.)   # carbonate_calcite_3.5um_curvc

# c_purple c_cyan c_skyblue c_blue c_flesh c_lavender c_magenta c_green c_yellowgreen c_yellow c_orange c_red

c=c_cyan
a = read_an_image("group.3.5um_curve/carbonate_dolomite_3.5um_curvc.fd.gif")
xcolor= xcolor + a*( c /255.)


c=c_skyblue
a = read_an_image("group.3.5um_curve/carbonate_magnesite+hydromagnesite_curvc.fd.gif")
xcolor= xcolor + a*( c /255.)


c=c_blue
a = read_an_image("group.3.5um_curve/carbonate_trace_3.5um_curvc.fd.gif")
xcolor= xcolor + a*( c /255.)


c=c_flesh
a = read_an_image("group.3.5um_curve/hydrogen_peroxide.3.52um_curvc.fd.gif")
xcolor= xcolor + a*( c /255.)


c=c_lavender
a = read_an_image("group.3.5um_curve/nitrate_niter_3.6um_curvc.fd.gif")
xcolor= xcolor + a*( c /255.)


c=c_magenta
a = read_an_image("group.3.5um_curve/organic_3.237d_aromatic-benzene_cv.fd.gif")
xcolor= xcolor + a*( c /255.)


c=c_green
a = read_an_image("group.3.5um_curve/organic.3.24um.pyridine_curvc.fd.gif")
xcolor= xcolor + a*( c /255.)


c=c_yellowgreen
a = read_an_image("group.3.5um_curve/organic.3.25um.nitrobenzene_curvc.fd.gif")
xcolor= xcolor + a*( c /255.)


c=c_yellow
a = read_an_image("group.3.5um_curve/organic.3.37um.pentene_curvc.fd.gif")
xcolor= xcolor + a*( c /255.)


c=c_orange
a = read_an_image("group.3.5um_curve/organic.3.41um.nonyne_curvc.fd.gif")
xcolor= xcolor + a*( c /255.)


c=c_red
a = read_an_image("group.3.5um_curve/organic_trace_3.42um_aliphatic1_curvc.fd.gif")
xcolor= xcolor + a*( c /255.)


########### end custom, no need to change anything below this line ###############################

xout=byte(xcolor+0.5)   # output color image, byte
xout = bip(xout)
xdim=dim(xout)
xdimx=xdim[1,,]      # color image width

gbasedim=dim(gbase)
x=gbasedim[1,,]      # base image width

if (x > dualmax) {
	dual = 0
}

if ( dual == 1 ) {
	
	gbase = bip(gbase)
	xout = cat (xout, gbase, axis=x)
}


fout=$2

adim=dim(xout)
if ( adim[1,,] > 5 || adim[2,,] > 5 ) {
	printf ("writing %s\n", fout)
	write (xout, filename=fout, type=png)
} else {
	printf ("not writing %s\n", fout)
	printf ("    image size < 6 pixels\n")
}
